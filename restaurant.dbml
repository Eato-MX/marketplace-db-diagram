Project restaurant {
  database_type: 'PostgreSQL'
}

/*****************************************************************************************
*                                        Catalogs                                        *
*****************************************************************************************/

// Status
Table restaurant.status {
    id int [pk, increment]
    name varchar(94) [not null]
    description varchar(64) [not null]
    for_table varchar(94)   [not null, Note: 'Table name which the status is for']
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
}

// Meassurment units
Table restaurant.measurement_units {
    id int [pk, increment]
    name varchar(94) [not null]
    description varchar(128) [not null]
    clave varchar(8) [not null, Note: 'SAT meassurment unit code']
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
}

// Fiscal regimes
Table restaurant.fiscal_regimes {
    id int [pk, increment]
    name varchar(94) [not null]
    description varchar(128) [not null]
    clave varchar(2) [not null, Note: 'SAT fiscal regime code']
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
}

// Flow types
Table restaurant.flow_types {
    id int [pk, increment]
    name varchar(94) [not null]
    description varchar(64) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]

    Note: 'Flow types as cost or outcome'
}

/**
* Movement types
* Son los tipos de movimientos que se pueden hacer en los almacenes, estos pueden ser del
* tipo:
*   - Entrada
*   - Salida
*   - Traslado
*   - Ajuste
*   - Merma
*/
Table restaurant.movement_types {
    id int [pk, increment]
    name varchar(94) [not null]
    description varchar(128) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
}

/*****************************************************************************************
*                                        Restaurant                                      *
*****************************************************************************************/

/**
*  Warehouse
*  Es el almacen del grupo restaurantero donde se pondrán los espacios para los registros
*  de los productos que se manejarán en el restaurante, de esta manera se puede llevar un 
*  registro de los movimientos así como poder transladar cantidades entre restaurantes o
*  areas.
*/
Table restaurant.warehouses {
    id UUID [pk, default: `uuid_generate_v4()`]
    name varchar(128) [not null]

    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    status_id int [ref: > restaurant.status.id]
    address_id UUID [ref: > restaurant.addresses.id]
}

/**
* Wharehouse Slots
* Son los espacios en los que se van a sumar o restar la cantidad de productos que se tienen
* sin importar la variante o proveedor que se haya adquirido.
*/
Table restaurant.warehouse_slots {
    id UUID [pk, default: `uuid_generate_v4()`]
    product_name varchar(128) [not null]
    product_id UUID [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    measurement_unit_id int [ref: > restaurant.measurement_units.id]
    warehouse_id UUID [ref: > restaurant.warehouses.id]
    area_id UUID [ref: > restaurant.areas.id]
    flow_types_id int [ref: > restaurant.flow_types.id]
}

/**
* Slot_movements
* Son los registros que se van dejando en los espacios de los almacenes para llevar un
* historial
*/
Table restaurant.slot_movements {
    id UUID [pk, default: `uuid_generate_v4()`]
    bill_name varchar(128) [not null]
    variant_id UUID [not null]
    product_id UUID [not null]

    quantity float(12.4) [not null]
    cost float(12.4) [not null]

    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    warehouse_slot_id UUID [ref: > restaurant.warehouse_slots.id]
    movement_type_id int [ref: > restaurant.movement_types.id]
}
Ref: restaurant.slot_movements.id > restaurant.orders.id

// Restaurant information
Table restaurant.restaurants {
    id UUID [pk, default: `uuid_generate_v4()`]
    name varchar(128) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    status_id int [ref: > restaurant.status.id]
    warehouse_id UUID [ref: > restaurant.warehouses.id]
    delivery_address_id UUID [ref: > restaurant.addresses.id]
}

// Restaurant Areas
Table restaurant.areas {
    id UUID [pk, default: `uuid_generate_v4()`]
    name varchar(128) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    status_id int [ref: > restaurant.status.id]
    restaurant_id UUID [ref: > restaurant.restaurants.id]
}

// Restaurant shopping list
Table restaurant.shopping_lists {
    id UUID [pk, default: `uuid_generate_v4()`]
    name varchar(128) [not null]
    description varchar(128) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    status_id int [ref: > restaurant.status.id]
    restaurant_id UUID [ref: > restaurant.restaurants.id]
}

// Restaurant shopping list items
Table restaurant.shopping_list_items {
    id UUID [pk, default: `uuid_generate_v4()`]
    quantity float(12.4) [not null]
    product_id UUID [not null]
    variant_id UUID [null, Note: 'Can be null to avoid variant dependency']

    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    shopping_list_id UUID [ref: > restaurant.shopping_lists.id]

    area_id UUID [ref: > restaurant.areas.id]
}

// Orders
Table restaurant.orders {
    id UUID [pk, Note: 'Generated by consuming Marketplace API']
    uuid varchar(8) [not null,Note: 'Template: YYMMXXXX']
    provider_id UUID [not null]

    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    area UUID [ref: > restaurant.areas.id]
    // indexes
    uuid_index varchar(8) [unique]
}

// Order items
Table restaurant.order_items {
    id UUID [pk, default: `uuid_generate_v4()`]
    quantity float(12.9) [not null]
    cost float(12.9) [not null]
    product_id UUID [not null]
    variant_id UUID [not null]
    bill_name varchar(128) [not null]
    description varchar(128) [not null]
    brand varchar(128) [not null]
    content varchar(128) [not null]

    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    order_id UUID [ref: > restaurant.orders.id]
    measurement_unit_id int [ref: > restaurant.measurement_units.id]
}

// General address table
Table restaurant.addresses {
    id UUID [pk, default: `uuid_generate_v4()`]
    street varchar(128) [not null]
    exterior varchar(64) [not null]
    interior varchar(64) [not null]
    neighborhood varchar(128) [not null]
    city varchar(128) [not null]
    state varchar(128) [not null]
    zip varchar(32) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
}

// Recipes
Table restaurant.recipes {
    id UUID [pk, default: `uuid_generate_v4()`]
    // Falta la relación con el usuario
    created_by UUID [not null]

    name varchar(128) [not null]
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    status_id int [ref: > restaurant.status.id]
    area_id UUID [ref: > restaurant.areas.id]
}

// Recipe items
Table restaurant.recipe_items {
    id UUID [pk, default: `uuid_generate_v4()`]
    quantity float(12.4) [not null]
    name varchar(128) [not null]
    product_id UUID [not null]


    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    recipe_id UUID [ref: > restaurant.recipes.id]
    measurement_unit_id int [ref: > restaurant.measurement_units.id]
}

// Subrecipes
Table restaurant.subrecipes {
    // relations
    recipe_id UUID [ref: > restaurant.recipes.id]
    subrecipe_id UUID [ref: > restaurant.recipes.id]
}

/*****************************************************************************************
*                                          Taxes                                         *
*****************************************************************************************/

// Tax information
Table restaurant.tax_informations {
    id UUID [pk, default: `uuid_generate_v4()`]
    name varchar(255) [not null]
    rfc varchar(13) [not null, Note: 'RFC']
    
    // Consultar las opcions de seguridad
    // Revisar si es necesrio para Restaurantes
    private_key_pass varchar(255) [not null]
    
    created_at datetime [default: `now()`]
    updated_at datetime [default: `now()`]
    deleted_at datetime [null]
    // relations
    fiscal_regime_id int [ref: > restaurant.fiscal_regimes.id]

    Note: 'Tax information'
}
Ref: restaurant.tax_informations.id <> restaurant.restaurants.id
